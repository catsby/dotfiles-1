{
  "name": "coc-go",
  "version": "0.6.0",
  "description": "gopls extension for coc",
  "author": "Josa Gesell <josa@gesell.me>",
  "license": "MIT",
  "main": "lib/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/josa42/coc-go.git"
  },
  "engines": {
    "coc": "^0.0.73"
  },
  "keywords": [
    "coc.nvim",
    "languageserver",
    "gopls",
    "go",
    "golang",
    "vim",
    "neovim"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build": "tsc -p tsconfig.json",
    "build:watch": "tsc --watch -p tsconfig.json",
    "prepare": "yarn clean && yarn build",
    "link:add": "node ./scripts/link.js add",
    "link:remove": "node ./scripts/link.js remove",
    "update-snippets": "node ./scripts/update-snippets.js",
    "lint": "eslint . --ext .ts,.js"
  },
  "activationEvents": [
    "onLanguage:go",
    "onCommand:go.install.gopls",
    "onCommand:go.install.gomodifytags",
    "onCommand:go.install.gotests",
    "onCommand:go.version"
  ],
  "contributes": {
    "rootPatterns": [
      {
        "filetype": "go",
        "patterns": [
          "go.mod",
          "glide.yaml"
        ]
      }
    ],
    "configuration": {
      "type": "object",
      "title": "gols",
      "properties": {
        "go.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable Go extension"
        },
        "go.commandPath": {
          "type": "string",
          "description": "[DEPRECATED] Use go.goplsPath"
        },
        "go.goplsPath": {
          "type": "string",
          "description": "Path to gopls bin"
        },
        "go.goplsOptions": {
          "type": "object",
          "description": "See gopls documentation: https://github.com/golang/tools/blob/master/gopls/doc/settings.md",
          "properties": {
            "buildFlags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "This is the set of flags passed on to the build system when invoked. It is applied to queries like go list, which is used when discovering files. The most common use is to set -tags."
            },
            "env": {
              "type": "object",
              "patternProperties": {
                ".+": {
                  "type": "string"
                }
              },
              "description": "This can be used to add environment variables. These will not affect gopls itself, but will be used for any external commands it invokes."
            },
            "hoverKind": {
              "type": "string",
              "enum": [
                "NoDocumentation",
                "SynopsisDocumentation",
                "FullDocumentation"
              ],
              "default": "SynopsisDocumentation",
              "description": "This controls the information that appears in the hover text."
            },
            "usePlaceholders": {
              "type": "boolean",
              "default": false,
              "description": "If true, then completion responses may contain placeholders for function parameters or struct fields."
            },
            "experimentalDisabledAnalyses": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "[EXPERIMENTAL] A list of the names of analysis passes that should be disabled. You can use this to turn off analyses that you feel are not useful in the editor."
            },
            "staticcheck": {
              "type": "boolean",
              "description": "[EXPERIMENTAL] If true, it enables the use of the staticcheck.io analyzers."
            },
            "completionDocumentation": {
              "type": "boolean",
              "default": true,
              "description": "[EXPERIMENTAL] If false, indicates that the user does not want documentation with completion results."
            },
            "completeUnimported": {
              "type": "boolean",
              "default": false,
              "description": "[EXPERIMENTAL] If true, the completion engine is allowed to make suggestions for packages that you do not currently import."
            },
            "deepCompletion": {
              "type": "boolean",
              "description": "[EXPERIMENTAL] If true, this turns on the ability to return completions from deep inside relevant entities, rather than just the locally accessible ones."
            }
          }
        },
        "go.tags": {
          "type": "object",
          "properties": {
            "tags": {
              "type": "string",
              "default": "json",
              "description": "Comma separated tags to be used by Go: Add Tags command"
            },
            "options": {
              "type": "string",
              "default": "json=omitempty",
              "description": "Comma separated tag=options pairs to be used by Go: Add Tags command"
            },
            "transform": {
              "type": "string",
              "enum": [
                "snakecase",
                "camelcase"
              ],
              "default": "snakecase",
              "description": "Transformation rule used by Go: Add Tags command to add tags"
            }
          }
        },
        "go.tests": {
          "type": "object",
          "properties": {
            "generateFlags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [],
              "description": "Additional command line flags to pass to `gotests` for generating tests."
            }
          }
        }
      }
    },
    "commands": [
      {
        "title": "Install / Update gopls",
        "category": "Go",
        "command": "go.install.gopls"
      },
      {
        "title": "Install / Update gomodifytags",
        "category": "Go",
        "command": "go.install.gomodifytags"
      },
      {
        "title": "Install / Update gotests",
        "category": "Go",
        "command": "go.install.gotests"
      },
      {
        "title": "Print extension version",
        "category": "Go",
        "command": "go.version"
      },
      {
        "title": "Add Tags To Struct Fields",
        "category": "Go",
        "command": "go.tags.add"
      },
      {
        "title": "Add Tags To Struct Field at current line",
        "category": "Go",
        "command": "go.tags.add.line"
      },
      {
        "title": "Add Tags To Struct Fields (prompt)",
        "category": "Go",
        "command": "go.tags.add.prompt"
      },
      {
        "title": "Remove Tags From Struct Fields",
        "category": "Go",
        "command": "go.tags.remove"
      },
      {
        "title": "Remove Tags From Struct Field at current line",
        "category": "Go",
        "command": "go.tags.remove.line"
      },
      {
        "title": "Remove Tags From Struct Fields (prompt)",
        "category": "Go",
        "command": "go.tags.remove.prompt"
      },
      {
        "title": "RemoAe All Tags From Struct Fields",
        "category": "Go",
        "command": "go.tags.clear"
      },
      {
        "title": "RemoAe All Tags From Struct Fields at current line",
        "category": "Go",
        "command": "go.tags.clear.line"
      },
      {
        "title": "Generate Unit Tests For File",
        "category": "Go",
        "command": "go.test.generate.file"
      },
      {
        "title": "Generate Unit Tests For Exported Functions in File",
        "category": "Go",
        "command": "go.test.generate.exported"
      },
      {
        "title": "Toggle Test File",
        "category": "Go",
        "command": "go.test.toggle"
      },
      {
        "title": "Run on Go Playground",
        "category": "Go",
        "command": "go.playground"
      }
    ],
    "snippets": [
      {
        "language": "go",
        "path": "./snippets/go.json"
      }
    ]
  },
  "devDependencies": {
    "@types/node": "^12.7.2",
    "@types/which": "^1.3.1",
    "@typescript-eslint/eslint-plugin": "^2.1.0",
    "@typescript-eslint/parser": "^2.1.0",
    "coc.nvim": "0.0.73",
    "eslint": "^6.3.0",
    "rimraf": "^3.0.0",
    "typescript": "^3.0.3"
  },
  "dependencies": {
    "tslib": "^1.9.3",
    "which": "^1.3.1"
  }
}
